defineconstant,begin
	0, emote:shrug
end

script, emote, who, which, begin
	variable (sli, i)
	suspendControl
	specwait (10)
	switch (which) do (
	case (emote:shrug) do (
		setHeroPicture (who,3)
		for (i, 0, 6) do (
			set hero direction (who,i,mod,2)
			specwait(10)
		)
		specwait (6)
		setHeroPicture (who,1)
		set hero direction (who,down)
	)
	)
	specwait (10)
	resumeControl
end



plotscript, events, which, begin
	suspendcontrol
	switch (currentmap) do (
		case (map:Village House) do (eventsVillageHouse(which))
		case (map:Attic) do (eventsattic(which))
		case (map:Forest) do (eventsForest(which))
		case (map:Village) do (eventsVillage(which))
	)
	resumecontrol
end

script, eventsVillageHouse, which, begin
	variable (i, var, who, sli, sli2, sli3, sli4)
	switch (which) do (
		case (3) do (
			settag(tag:heard from elder,true)
			who := npcReference(4)
			set npc direction (who, up)
			specwait(8)
			set herodirection (me, down)
			specwait(8)
			for (i,60,63) do (write (i))
			specwait(2)
		)
		case (4) do (
			if (checktag(tag:heard from elder)==false) then (
				for (i,60,63) do (write (i))
				settag(tag:heard from elder,true)
			) else (write (63))

		)
	)
end

script, eventsForest, which, begin
	variable (i, var, who, sli, sli2, sli3, sli4)
	switch (which) do (
		case (1) do (
			for (i,38,43) do (write (i))
			who := npcReference(which)
			dissolveSprite(getnpcsprite (who), dissolve:ghostly fade, 80)
			specwait(70)
			set tag(tag:smilecatgone,on)
		)
		case (3) do (
			for (i, 64, 66) do (write (i))
			battle (2)
		)
		case (4) do (
			settag ()
			pathfind hero to (me, 22, 16)
			fadescreenout
			fademusicout
			set tag (15, on)
			teleporttomap(2, 11, 8)
			specwait (20)
			fadescreenin
		)
	)
end

script, eventsVillage, which, begin
	switch (which) do (
		case (11) do (
			write (70, 0, 2)
			if (checktag (tag:yesNo)) then (
				screenFadeOut
				map cure (4, me, me)
				screenFadeIn
				write (71)
				settag (tag:yesno, off)
			) else (write (72))
		)
	)
end

script, eventsattic, which, begin
	variable (i, var, who, sli, sli2, sli3, sli4)
	switch (which) do (
		case (0) do (
			if (checktag(tag:Statueboss)==on) then (
				write (73)
				exit script
			)
			if (check tag (tag:MirrorCheck)==on) then (
				write (2)
				write (13, 0, 2)
				if (checktag(tag:YesNo)==off) then (
					exit script
				)
				setTag(tag:YesNo,off)
				for (i, 1, 10) do (
					if (i <= 5) then (set hero frame (me, 1))
					setHeroZ (me, heroZ (me)+1)
					if (i > 5) then (set hero frame (me, 0))
					specwait(1)
				)
				specwait(20)
				set hero picture (me, 4)
				specwait (20)
				set hero frame (me, 0)
				specwait (20)
				set hero frame (me, 1)
				specwait(20)
				set hero picture (me, 1)
				specwait(20)
				for (i, 1, 10) do (
					if (i <= 5) then (set hero frame (me, 1))
					setHeroZ (me, heroZ (me)--1)
					if (i > 5) then (set hero frame (me, 0))
					specwait(1)
				)

				suspendcontrol
				specwait(60)
				sli := load attack sprite(0)
				center slice (sli)
				put slice (sli, 0, -20)
				for (i,0,2) do (
					setSpriteFrame (sli, i)
					specwait(8)
				)
				free slice (sli)
				fadeMusicOut()
				play song (11)
				specwait (240)
				sli := load attack sprite(1)
				sli2 := load attack sprite(2)
				set parent(sli, parent slice (getherosprite(me)))
				slice to back (sli)
				set parent(sli2,parent slice (getherosprite(me)))
				set slice visible (getherosprite(me), false)
				sli4 := create container (20, 36)
				set parent (sli4, sli)
				sli3 := loadWalkaboutSprite(get hero picture(me))
				set parent (sli3, sli4)
				realign slice (sli4, edge:center, edge:bottom, edge:center, edge:bottom)
				realign slice (sli3, edge:center, edge:bottom, edge:center, edge:bottom)
				realign slice (sli, edge:center, edge:bottom, edge:center, edge:bottom)
				realign slice (sli2, edge:center, edge:bottom, edge:center, edge:bottom)
				set slice clipping (sli4, true)
				dissolve sprite (sli, dissolve:shrink to center, 100, 10, true)
				dissolve sprite (sli2, dissolve:shrink to center, 100, 10, true)

				for (i, 1, 80) do (
					if (i,mod,4==1) then (wildpal(4))
					set sprite frame (sli, (i/2),mod,2)
					set sprite frame (sli2, (i/2),mod,2)
					specwait(1)
				)
				for (i, 1,80) do (

					if (i,mod,4==1) then (wildpal(4))
					specwait (1)
					set sprite frame (sli3,4)
					setSlicey (sli3, i * -2)
					set sprite frame (sli, (i/2),mod,2)
					set sprite frame (sli2, (i/2),mod,2)
				)
				
				
				dissolve sprite (sli, dissolve:shrink to center, 30, 0)
				dissolve sprite (sli2, dissolve:shrink to center, 30, 0)
				for (i, 1, 10) do (
					if (i,mod,4==1) then (wildpal(4))
					set sprite frame (sli, (i/2),mod,2)
					set sprite frame (sli2, (i/2),mod,2)
					specwait(2)
				)
				free slice (sli)
				free slice (sli2)
				for (i,0,30) do (
					if (i,mod,4==1) then (wildpal(4))
					specwait
				)
				reset palette
				update palette
				

				#note: evil reflection here
				set tag (tag:Mirror Person, on)
				who := npcReference(5)
				sli := getNpcSprite(who)
				set slice visible (sli, false)
				specwait(100)
				set slice visible (sli, true)
				dissolveSprite (sli, dissolve:ghostly fade, 140, 0, true)
				specwait(200)
				set slice visible (slice child (lookupslice(sli:mirrorheroes), 0), false)
				set NPC ignores walls (who, true)
				set NPC obstructs (who, false)
				pathfind NPC to (who,11,8)
				while(NPC is walking (who)) do (specwait)
				set NPC frame(who, 0)
				specwait (100)
				set NPCDirection(who, right)
				specwait(60)
				set NPCDirection(who, down)
				specwait(30)
				set NPCDirection(who, left)
				specwait(60)
				set NPCDirection(who, down)
				specwait(60)
				set NPC ignores walls (who, false)
				set NPC obstructs (who, true)
				pathfind NPC to (who,15,15)

				while(NPC is walking (who)) do (specwait)

				screenfadeout
				set slice visible (getherosprite(me), true)
				set hero direction (me, down)
				suspend map music
				teleporttomap(3, 20, 75)
				specwait(40)
				resume map music
				screenfadein
				write(35)
				specwait(40)
				write(41)
				specwait(40)
				#npc talking
				set tag (tag:celest1, on)
				who := NPC reference (2)
				sli := getNpcSprite(who)
				dissolveSprite (sli, dissolve:fade, 100, 0, true)
				specwait (180)
				pathfind NPC to (who, heroX+1,heroY)
				while(NPC is walking (who)) do (specwait)
				set hero direction (me, right)
				for (i, 46, 54) do (write (i))
				dissolveSprite (sli, dissolve:fade, 100)
				specwait (90)
				set tag (tag:celest1, off)
				fade music out()
				play song (get ambient music)
			)else (
				who := NPC reference (0)
				set NPC frame(who, 1), specwait(5)
				set NPC frame(who, 0)
				for (i, 1, 3) do (
					set npc direction(who,i)
					specwait(15)
				)
				specwait(60)
				write (6)
				set tag (tag:MirrorCheck, on)
			)
		)
		case (1) do (
			emote(me, emote:shrug)
			suspendcontrol
			specwait(10)
			write(3)
		)
		case (3) do (
			if (checktag(tag:got food)) then (write (5)) else (
				get item (2)
				get item name (3,2)
				write(8)
				settag(tag:got food, true)
			)
		)
		case (10) do (
			for (i, 76,79) do (write (i))
			battle (7)
			suspendcontrol
			write (80)
			suspendcontrol
			who := npcReference(which)
			dissolveSprite(getnpcsprite (who), dissolve:random scatter, 80)
			specwait(70)
			set tag(15,off)
			pathfind hero to (me, 15, 15)
			while (hero is walking(me)) do (specwait)
			spec wait (50)
			set slice visible (getherosprite(me), false)
			spec wait (50)
			screenfadeout
			fadeMusicOut
			play song(0)
			for (i, 81, 83) do (write (i))
			specwait(20)
			suspendcontrol
			load backdrop sprite (19)
			waitForAnyKey
			load backdrop sprite (20)
			specwait(20)
			suspend control
			waitForAnyKey
			screenfadeout
			reset game ()
		)
		case (11) do (
			write (74)
			screenFadeOut
			map cure (4, me, me)
			screenFadeIn
			write (75)
		)
	)
end