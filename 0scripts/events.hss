defineconstant,begin
	0, emote:shrug
end

script, emote, who, which, begin
	variable (sli, i)
	suspendControl
	specwait (10)
	switch (which) do (
	case (emote:shrug) do (
		setHeroPicture (who,3)
		for (i, 0, 6) do (
			set hero direction (who,i,mod,2)
			specwait(10)
		)
		specwait (6)
		setHeroPicture (who,1)
		set hero direction (who,down)
	)
	)
	specwait (10)
	resumeControl
end

plotscript, events, which, begin
	suspendcontrol
	switch (currentmap) do (
		case (2) do (eventsattic(which))
		case (map:Forest) do (eventsForest(which))
	)
	resumecontrol
end

script, eventsForest, which, begin
	variable (i, var, who, sli, sli2, sli3, sli4)
	switch (which) do (
		case (1) do (
			for (i,38,43) do (write (i))
			who := npcReference(which)
			dissolveSprite(getnpcsprite (who), dissolve:ghostly fade, 80)
			specwait(70)
			set tag(tag:smilecatgone,on)
		)
	)
end

script, eventsattic, which, begin
	variable (i, var, who, sli, sli2, sli3, sli4)
	switch (which) do (
		case (0) do (
			if (check tag (tag:MirrorCheck)==on) then (
				write (2)
				write (13, 0, 2)
				if (checktag(tag:YesNo)==off) then (
					exit script
				)
				setTag(tag:YesNo,off)
				for (i, 1, 10) do (
					if (i <= 5) then (set hero frame (me, 1))
					setHeroZ (me, heroZ (me)+1)
					if (i > 5) then (set hero frame (me, 0))
					specwait(1)
				)
				specwait(20)
				set hero picture (me, 4)
				specwait (20)
				set hero frame (me, 0)
				specwait (20)
				set hero frame (me, 1)
				specwait(20)
				set hero picture (me, 1)
				specwait(20)
				for (i, 1, 10) do (
					if (i <= 5) then (set hero frame (me, 1))
					setHeroZ (me, heroZ (me)--1)
					if (i > 5) then (set hero frame (me, 0))
					specwait(1)
				)

				suspendcontrol
				specwait(60)
				sli := load attack sprite(0)
				center slice (sli)
				put slice (sli, 0, -20)
				for (i,0,2) do (
					setSpriteFrame (sli, i)
					specwait(8)
				)
				free slice (sli)
				fadeMusicOut()
				play song (11)
				specwait (240)
				sli := load attack sprite(1)
				sli2 := load attack sprite(2)
				set parent(sli, parent slice (getherosprite(me)))
				slice to back (sli)
				set parent(sli2,parent slice (getherosprite(me)))
				set slice visible (getherosprite(me), false)
				sli4 := create container (20, 36)
				set parent (sli4, sli)
				sli3 := loadWalkaboutSprite(get hero picture(me))
				set parent (sli3, sli4)
				realign slice (sli4, edge:center, edge:bottom, edge:center, edge:bottom)
				realign slice (sli3, edge:center, edge:bottom, edge:center, edge:bottom)
				realign slice (sli, edge:center, edge:bottom, edge:center, edge:bottom)
				realign slice (sli2, edge:center, edge:bottom, edge:center, edge:bottom)
				set slice clipping (sli4, true)
				dissolve sprite (sli, dissolve:shrink to center, 100, 10, true)
				dissolve sprite (sli2, dissolve:shrink to center, 100, 10, true)

				for (i, 1, 80) do (
					if (game:tick,mod,4==1) then (wildpal(4))
					set sprite frame (sli, (i/2),mod,2)
					set sprite frame (sli2, (i/2),mod,2)
					specwait(2)
				)
				for (i, 1,80) do (

					if (game:tick,mod,4==1) then (wildpal(4))
					specwait (2)
					set sprite frame (sli3,4)
					setSlicey (sli3, i * -2)
					set sprite frame (sli, (i/2),mod,2)
					set sprite frame (sli2, (i/2),mod,2)
				)
				
				
				dissolve sprite (sli, dissolve:shrink to center, 30, 0)
				dissolve sprite (sli2, dissolve:shrink to center, 30, 0)
				for (i, 1, 10) do (
					if (game:tick,mod,4==1) then (wildpal(4))
					set sprite frame (sli, (i/2),mod,2)
					set sprite frame (sli2, (i/2),mod,2)
					specwait(2)
				)
				free slice (sli)
				free slice (sli2)
				for (i,0,30) do (
					if (game:tick,mod,4==1) then (wildpal(4))
					specwait
				)
				reset palette
				update palette
				

				#note: evil reflection here
				set tag (tag:Mirror Person, on)
				who := npcReference(5)
				sli := getNpcSprite(who)
				set slice visible (sli, false)
				specwait(100)
				set slice visible (sli, true)
				dissolveSprite (sli, dissolve:ghostly fade, 140, 0, true)
				specwait(300)
				set slice visible (slice child (lookupslice(sli:mirrorheroes), 0), false)
				set NPC ignores walls (who, true)
				set NPC obstructs (who, false)
				pathfind NPC to (who,11,8)
				while(NPC is walking (who)) do (specwait)
				set NPC frame(who, 0)
				specwait (100)
				set NPCDirection(who, right)
				specwait(60)
				set NPCDirection(who, down)
				specwait(30)
				set NPCDirection(who, left)
				specwait(60)
				set NPCDirection(who, down)
				specwait(120)
				set NPC ignores walls (who, false)
				set NPC obstructs (who, true)
				pathfind NPC to (who,15,15)

				while(NPC is walking (who)) do (specwait)

				screenfadeout
				fade music out(20)
				set slice visible (getherosprite(me), true)
				teleporttomap(3, 20, 75)
				specwait(40)
				screenfadein
				write(35)
			)else (
				who := NPC reference (0)
				set NPC frame(who, 1), specwait(5)
				set NPC frame(who, 0)
				for (i, 1, 3) do (
					set npc direction(who,i)
					specwait(15)
				)
				specwait(60)
				write (6)
				set tag (tag:MirrorCheck, on)
			)
		)
		case (1) do (
			emote(me, emote:shrug)
			suspendcontrol
			specwait(10)
			write(3)
		)
		case (3) do (
			if (checktag(tag:got food)) then (write (5)) else (
				get item (2)
				get item name (3,2)
				write(8)
				settag(tag:got food, true)
			)
		)
	)
end