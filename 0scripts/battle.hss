define constant, begin
	0, battle:attack
	1, battle:insult
	2, battle:nice
	3, battle:def
	4, battle:run
end

plotscript, battle, formation, begin
	variable (i, sli)
	specwait (10)
	#start battle
	battle:formation := formation
	innitbattle(formation)
	specwait(20)
	while (state:control==state:battle) do (
		battleturn()
		battleaction()
		specwait(6)
	)

	#clean up slices and exit script
	

	subscript, battleturn, begin
		if (lookupslice(sli:battleCol)) then () else (exit script)
		set slice visible (lookupslice (sli:battlemenu), true)

		battle:turn := true
		while (battle:turn) do (
			specWait()
		)
		battle:turn := false
		if (lookupslice(sli:battleCol)) then () else (exit script)
		set slice visible (lookupslice (sli:battlemenu), false)
	end

	subscript, battleaction, begin
		if (lookupslice(sli:battleCol)) then () else (exit script)
		sli := lookupslice(sli:enemySprite)

		if (battle:selected == battle:def) then (
			battledefend()
			if (lookupslice(sli:battleCol)) then () else (exit script)
			enemyLogic()
		) else (
			if (getspeed(formation)) then (
				playerLogic()
				if (lookupslice(sli:battleCol)) then () else (exit script)
				enemyLogic()
			) else (
				enemyLogic()
				if (lookupslice(sli:battleCol)) then () else (exit script)
				playerLogic()
			)
		)
		show no value
		exitReturning(false)
	end

	subscript, playerLogic, begin
		switch(battle:selected) do (
			case (battle:attack) do(battleAttack(formation))
			case (battle:insult) do(battleinsult(formation))
			case (battle:nice) do(battlenice(formation))
			case (battle:def) do(battledefend)
			case (battle:run) do(battlerun(formation))
		)
	end
	subscript, enemyLogic, begin
		switch (random(0,14)) do (
			case (0,1,2,3,4,5,6,7,8,9) do (enemyattack(formation))
			case (10,11,12) do (enemyinsult(formation))
			else (enemynice(formation))
		)
		battle:defend := false
	end
end

script, battleAttack, formation,  begin
	variable(sli)
	sli := lookupslice(sli:enemySprite)
	switch (formation) do (
		case (enemy:Birda) do 		($4="You punch her in the tits.")
		case (enemy:Statueacle) do 	($4="You hit him with all your might.")
		case (enemy:Danca) do 		($4="You slap her.")
		case (enemy:Tentaeye) do 	($4="You punch its eye.")
		case (enemy:HunnaGunna) do 	($4="You steal her gun and chuck it at her \nface.")
		case (enemy:PanicBear) do 	($4="You suplex them into a tree.")
		case (enemy:Mirror) do 		($4="You kick her and break off part of the \nmirror.")
		else ($4="ERROR")
	)
	battle:damage := getHeroStat(me, stat:Atk) -- getEnemyStat(formation, stat:Def)/2
	if (battle:damage<1) then (battle:damage:=1)
	write(11), play sound (6), shakeslice(sli,30),write(12)
	setEnemyStat(formation, stat:HP, getEnemyStat (formation, stat:HP)--battle:damage)
	if (getEnemyStat (formation, stat:HP)<=0) then (
		battleWin(formation)
	)
end

script, battleinsult, formation, begin
variable(sli)
	sli := lookupslice(sli:enemySprite)
	switch (formation) do (
		case (enemy:Birda) do 		($4="You begin to grope her boobs.")
		case (enemy:Statueacle) do 	($4="You say he sucks big time.")
		case (enemy:Danca) do 		($4="You tell her she dances terribly.")
		case (enemy:Tentaeye) do 	($4="You tickle the tentacles.")
		case (enemy:HunnaGunna) do 	($4="You tell her she is flat....\nAnd she cries.")
		case (enemy:PanicBear) do 	($4="You tell them there's a bomb on\ntheir back.")
		case (enemy:Mirror) do 		($4="You call her fat, but she doesn't\nseem to care.")
		else ($4="ERROR")
	)
	write(11), shakeslice(sli,30,4)
end

script, battlenice, formation, begin
	switch (formation) do (
		case (enemy:Birda) do 		($4="You sweet talk her some")
		case (enemy:Statueacle) do 	($4="You tell him how nice and toned\nhis body is")
		case (enemy:Danca) do 		($4="You pull some sick moves.")
		case (enemy:Tentaeye) do 	($4="You give it a nice firm handshake")
		case (enemy:HunnaGunna) do 	($4="You headpat her disarmingly.")
		case (enemy:PanicBear) do 	($4="You pull out a bottle of tea and\nhand it to them")
		case (enemy:Mirror) do 		($4="You smile at her. She laughs at you.")
		else ($4="ERROR")
	)
	write(11)
end

script, battledefend, begin
	$4="You ready yourself and heal 2 damage."
	map cure(3, me, me)
	write(11)
	updateHearts
	battle:defend := true
end

script, battlerun, formation, begin
	if (formation == 2) then (
		$4="You can't run from this fight."
		write(11)
		exit script
	)
	if (random(0,10)<4) then (
		$4="You ran away."
		write(11)
		battleend(formation)
	) else (
		$4="Couldn't escape.", write(11)
	)
end

script, setupslices, formation, begin
	variable (sli, sli2, i)

	#replace enemy sprite
	set sprite set number (sli := lookupslice(sli:enemySprite), formation)

	sli := lookupslice(sli:playerhearts)
	for (i,2,get hero stat(me, stat:hp, maximumStat)) do (
		clone slice (first child (sli))
	)
	updateHearts
	setEnemyStat (formation, stat:HP, getEnemyStat (formation, stat:MP))

	#set text
	switch (formation) do (
		case (enemy:Birda) do (
			$3="Punch her in the tits, hard."
			$4="Grope her boobs. Obviously."
			$5="Attempt to befriend."
		) case (enemy:Statueacle) do (
			$3="Attack him."
			$4="Tell him he sucks."
			$5="Compliment his bod."
		) case (enemy:Danca) do (
			$3="Slap her until she no dance."
			$4="Insult her moves."
			$5="Dance with her."
		) case (enemy:Tentaeye) do (
			$3="Punch it in the fucking eye."
			$4="Tickle the... *slimy* tentacles."
			$5="Try to shake hands with it."
		) case (enemy:HunnaGunna) do (
			$3="Grab her gun and throw it at her."
			$4="Tell her she's flat."
			$5="Gib headpats"
		) case (enemy:PanicBear) do (
			$3="Suplex them."
			$4="Tell them you have a bomb."
			$5="Offer them some calming tea."
		)case (enemy:Mirror) do (
			$3="Kick her very hard."
			$4="Call her fat."
			$5="Smile disarmingly at her."
		) else (
			$3="ERROR"
			$4="ERROR"
			$5="ERROR"
		)
	)
	$6="Defend, of course"
	$7="Run for it"

	#update text slices
	for (i, 0, 4) do (
		sli := slice child(first child (lookup slice (sli:battleMenu)), i)
		setSliceText (sli, i+3)
	)
end

script, enemyattack, formation, begin
	variable(sli)
	sli := lookupslice(sli:battleCol)
	switch (formation) do (
		case (enemy:Birda) do 		($4="Birda used wing attack!")
		case (enemy:Danca) do 		($4="She stepped on your toes really hard.")
		case (enemy:Statueacle) do 	($4="He punches you with a powerful hook.")
		case (enemy:Tentaeye) do 	($4="You're slapped by a tentacle")
		case (enemy:HunnaGunna) do 	($4="She shoots you in the eye with her\nwater gun.")
		case (enemy:PanicBear) do 	($4="They trip into you, and that hurts more\nthan it should.")
		case (enemy:Mirror) do 		($4="She attacks you with a whirlwind of\nglass shards.")
		else ($4="ERROR")
	)
	battle:damage := getEnemyStat(formation, stat:Atk) -- getHeroStat(me, stat:Def)/2
	if (battle:damage<1) then (battle:damage:=1)
	if (battle:defend) then (
		if (battle:damage == 1) then (battle:damage:=0) else (
			battle:damage := battle: damage/2
		)
	)
	set hero stat (me, stat:HP, get herostat(me, stat:HP, currentStat)--battle:damage, currentStat)
	write(11), play sound (6), shakeslice(sli,30), updateHearts, write(12)
	if (get herostat(me, stat:HP)<=0) then (
		$4="You've lost your willpower to keep\nfighting."
		#expand string(4)
		write(11)
		defgameover
	)
end

script, enemyinsult, formation, begin
	variable(sli)
	sli := lookupslice(sli:battleCol)
	switch (formation) do (
		case (enemy:Birda) do 		($4="She said you're ugly.")
		case (enemy:Danca) do 		($4="She said your mother cannot dance!")
		case (enemy:Statueacle) do 	($4="He flexes and laughs at you.")
		case (enemy:Tentaeye) do 	($4="A tentacle touches your ass")
		case (enemy:HunnaGunna) do 	($4="She flips you off.")
		case (enemy:PanicBear) do 	($4="They tell you that you should be at\nwork right now.")
		case (enemy:Mirror) do 		($4="She calls you ugly.")
		else (
			$4="ERROR"
		)
	)
	write(11), shakeslice(sli,30)
end

script, enemynice, formation, begin
	variable(sli)
	sli := lookupslice(sli:battleCol)
	switch (formation) do (
		case (enemy:Birda) do 		($4="She jiggles her boobs.")
		case (enemy:Danca) do 		($4="She kisses you." )
		case (enemy:Statueacle) do 	($4="He flirtatiously winks at you.")
		case (enemy:Tentaeye) do 	($4="You get a nice neck message.")
		case (enemy:HunnaGunna) do 	($4="She smiles kindly at you.")
		case (enemy:PanicBear) do 	($4="They calm down long enough to\ncompliment your hair.")
		case (enemy:Mirror) do 		($4="She laughs maniacally.")
		else (
			$4="ERROR"
		)
	)
	write(11)
end

script, battlewin, formation, begin
	variable (temp, sli, var)
	$4="You defeated your enemy"
	write(11)
	
	sli := lookupslice(sli:enemySprite)
	dissolve sprite (sli, dissolve:shrink, 80)
	spec wait (70)
	setSliceVisible(sli, false)

	temp := get hero level (me)
	#get rewards
	get money (read enemy data (formation, enemy:gold))
	$4="You got $"
	append number (4, read enemy data (formation, enemy:gold))
	$4+"!"
	write(11)
	give experience(me,read enemy data (formation, enemy:experience))
	$4="You got "
	append number (4, read enemy data (formation, enemy:experience))
	$4+" exp!"
	write(11)
	if (random(1,100) < read enemy data (formation, enemy:itempercent)) then (
		var := read enemy data (formation, enemy:item)
		get item name (3, var)
		write (8)
		get item (var)
	)
	if (temp <> get hero level (me)) then (
		write (17)
	)
	if (formation==2) then (set tag (tag:statueboss, on))
	battleend(formation)
end

script, getspeed, formation, begin
	variable (var1, var2)
	var1 := getHeroStat(me, stat:speed) + random (0, getHeroStat(me, stat:speed)/4)
	var2 := getEnemyStat(formation, stat:speed) + random (0, getEnemyStat(formation, stat:speed)/4)
	if (var1>=var2) then (exit returning(true))
end

script, shakeslice, sli,  time, intensity=20, begin
	variable(i, var)
	if (lookupslice(sli:battleCol)) then () else (exit script)
	for (i,1,time+1) do (
		if (i,mod,2) then (var := -1) else (var := 1)
		set slice x (sli, intensity*var/i)
		specwait(5)
	)	
end

script, innitBattle, formation, begin
	variable (i, sli)
	suspendControl()
	screenFadeOut()
	fadeMusicOut(10)
	if (formation == 2||formation == 7) then (playSong (7)) else (play song (5))
	
	loadSliceCollection(0)
	loadBattleback(formation)
	setupslices(formation)
	state:control  := state:battle
	sliceToFront(lookupslice(sli:fade))
	specWait(20)
	screenFadeIn()
	battle:selected := 0
end

script, battleend, formation, begin
	suspendcontrol()
	battle:turn := false
	screenfadeout()
	fademusicout(40)
	playsong (getAmbientMusic)
	show no value
	freeSlice (lookupslice(sli:battleCol))
	screenfadein()
	resumecontrol()
end

script, battleupdate, time=1, begin
	variable (i, sli, formation)
	formation := battle:formation
	sinedist(formation)
	sli := lookupslice(sli:enemySprite)
	if (game:tick,mod,10==0) then (
		if (get sprite frame (sli)==sprite frame count(sli)--1) then (set sprite frame (sli, 0)) else(
			set sprite frame (sli, get sprite frame(sli)+1)
		)
	)
	if (game:tick,mod,4) then (
		for (i,0,4) do (
			if (i<>battle:selected) then (
				sli := slice child (first child (lookupslice(sli:battlemenu)), i)
				setSliceVisible(sli,true)
			)
		)
		sli := slice child (first child (lookupslice(sli:battlemenu)), battle:selected)
		if (getSliceVisible (sli)==false) then (setSliceVisible(sli,true)) else (setSliceVisible(sli, false))
	)
end

script, updateHearts, begin
	variable (i, sli)
	sli := first child (first child(lookupslice(sli:playerhearts)))
	for (i,1,get hero stat(me, stat:hp, maximumStat)) do (
		set slice visible (sli, false)
		sli := slice parent (sli)
		sli := next sibling (sli)
		if (sli) then (sli := first child (sli))
	)
	sli := first child (first child(lookupslice(sli:playerhearts)))
	for (i,1,get hero stat(me, stat:hp, currentStat)) do (
		set slice visible (sli, true)
		sli := slice parent (sli)
		sli := next sibling (sli)
		if (sli) then (sli := first child (sli))
	)
end

script, loadbattleback, formation, begin
	variable (height, sli, sli2, i, j, set1, set2, blend1, blend2, opacity1, opacity2)
	sli := load backdrop sprite (0)
	height := slice height (sli)

	set slice clipping (sli, true)
	set slice lookup(sli, sli:battleback)
	set parent(sli, lookupslice(sli:battleCol))
	slice to back (sli)

	switch (formation)do(
		case (enemy:Birda) do (
			set1 := 5, set2 := 4
			opacity1 := 60
			opacity2 := 20
			blend1 := blend:normal
			blend2 := blend:normal
		) case (enemy:Statueacle) do (
			set1 := 5, set2 := 10
			opacity1 := 80
			opacity2 := 70
			blend1 := blend:normal
			blend2 := blend:normal
		) case (enemy:Danca) do (
			set1 := 11, set2 := 11
			opacity1 := 60
			opacity2 := 60
			blend1 := blend:normal
			blend2 := blend:normal
		) case (enemy:Tentaeye) do (
			set1 := 13, set2 := 12
			opacity1 := 90
			opacity2 := 60
			blend1 := blend:normal
			blend2 := blend:normal
		) case (enemy:HunnaGunna) do (
			set1 := 13, set2 := 10
			opacity1 := 80
			opacity2 := 30
			blend1 := blend:normal
			blend2 := blend:normal
		) case (enemy:PanicBear) do (
			set1 := 5, set2 := 11
			opacity1 := 30
			opacity2 := 70
			blend1 := blend:normal
			blend2 := blend:normal
		)case (enemy:Mirror) do (
			set1 := 12, set2 := 13
			opacity1 := 50
			opacity2 := 50
			blend1 := blend:normal
			blend2 := blend:normal
		) else (
			set1 := 1, set2 := 1
			opacity1 := 100
			opacity2 := 100
			blend1 := blend:normal
			blend2 := blend:normal
		)
	)
	for (j, 0, 1) do (
		sli := create container ()
		set parent(sli, lookupslice(sli:battleback))

		for (i, 0, height--1) do (
			sli := create container(500, 1)
			put slice (sli, 0, i) 
			set parent (sli, last child (lookupslice(sli:battleback)))
			set slice clipping (sli, true)

			if (j == 0) then (
				sli2 := load backdrop sprite (set1)
				set blend mode (sli2, blend1)
				set opacity (sli2, opacity1)

			) else (
				sli2 := load backdrop sprite (set2)
				set blend mode (sli2, blend2)
				set opacity (sli2, opacity2)
			)

			set parent (sli2, sli)
			put slice (sli2, 0, i * -1)	
		)
	)
end

script, sinedist, formation, begin
	variable (i, j, sli, offset, newX, x, y, t, height)
	variable (amplitude, frequency, timeScaling, mode, compression)

	#formation := getElement(get array(array:battleinfo), battle:formation)

	sli := slice child (first child (first child (lookupslice(sli:battleback))))

	height := slice height (sli)

	for (j, 0, 1) do (

		if (j == 0) then (
			switch (formation) do (
				case (enemy:Birda) do (
					amplitude := 5, frequency := 20, compression := 2
					timeScaling := 50, mode := 1
				) case (enemy:Statueacle) do (
					amplitude := 4, frequency := 3, compression := 1
					timeScaling := 20, mode := 2
				)case (enemy:Danca) do (
					amplitude := 4, frequency := 20, compression := 1
					timeScaling := 16, mode := 1
				) case (enemy:Tentaeye) do (
					amplitude := 4, frequency := 20, compression := 1
					timeScaling := 20, mode := 3
				) case (enemy:HunnaGunna) do (
					amplitude := 10, frequency := -8, compression := 1
					timeScaling := 40, mode := 3
				) case (enemy:PanicBear) do (
					amplitude := 4, frequency := 8, compression := 1
					timeScaling := 20, mode := 2
				)case (enemy:Mirror) do (
					amplitude := 4, frequency := 20, compression := 1
					timeScaling := 20, mode := 3
				) case (999) do (
					amplitude := 3, frequency := 80, compression := 1
					timeScaling := 10, mode := 3
				) else (
					amplitude := 3, frequency := 5, compression := 0
					timeScaling := 40, mode := 0
				)
			)
		) else (
			switch (formation) do (
				case (enemy:Birda) do (
					amplitude := -10, frequency := 30, compression := 1
					timeScaling := 60, mode := 2
				) case (enemy:Statueacle) do (
					amplitude := 4, frequency := 3, compression := 1
					timeScaling := 20, mode := 2
				)case (enemy:Danca) do (
					amplitude := 4, frequency := 20, compression := 1
					timeScaling := 20, mode := 3
				) case (enemy:Tentaeye) do (
					amplitude := 2, frequency := -20, compression := 1
					timeScaling := 20, mode := 2
				) case (enemy:HunnaGunna) do (
					amplitude := 4, frequency := 20, compression := 1
					timeScaling := 40, mode := 3
				) case (enemy:PanicBear) do (
					amplitude := 4, frequency := 20, compression := 1
					timeScaling := 20, mode := 3
				)case (enemy:Mirror) do (
					amplitude := 4, frequency := 20, compression := 1
					timeScaling := 20, mode := 3
				) case (999) do (
					amplitude := 1, frequency := -30, compression := 1
					timeScaling := 10, mode := 1
				) else (
					amplitude := 3, frequency := 7, compression := 0
					timeScaling := 20, mode := 0
				)
			)
		)

		t := get slice extra (first child (lookupslice(sli:battleback)), 0)
		if (timeScaling == 0) then (timeScaling := 1)
		t := (t * 80)/timeScaling

		for (i, 0, height--1) do (
			x := 0
			sli := first child (slice child (slice child (lookupslice(sli:battleback), j), i))
			
			offset := sine ((frequency*i)/2 + t) * amplitude/6000
			
			if (mode == 1) then(
				x := offset
				put slice (sli, x, i * -1)
			) else if (mode == 2) then (
				if (i, mod, 2) then (offset := offset * -1) else ()
				x := offset
				put slice (sli, x, i * -1)
			) else if (mode == 3) then (
				y := i * compression + offset

				y := (y + height), mod, height

				put slice (sli, x, y * -1) 
			)
		)
		
	)
	
	
	t := get slice extra (first child (lookupslice(sli:battleback)), 0)
	t += 1
	set slice extra (first child (lookupslice(sli:battleback)), 0, t)
end