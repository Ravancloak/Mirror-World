plotscript, opensettingsmenu, begin
	open menu(1)
	$1="Music "
	append number (1, musicpercent)
	$1+"%"
	set menu item caption(menu item by true slot(top menu, 1), 1)
	select menu item (menu item by slot(top menu, menu:lastmain))
end

plotscript, menuclosesettings, begin
	menu:lastmain := menu item slot (selected menu item(top menu))
	show value (menu:lastmain)
end

#main menu script
script, mm, begin
	variable (sli)
	loadSliceCollection(2)
	mm:openmenu := false
	state:control := state:mm
	while (state:control == state:mm) do (
		specwait
	)
	freeSlice(lookupslice(sli:mm))
	show no value
end

plotscript, exit textbox, begin
	resumecontrol()
	write (31,0,1)
	if (checktag(tag:yes no)) then (reset game)
end

script, mmupdate, begin
	variable (i, sli, sli2)
	if (mm:openmenu==mm:im) then (
		if (game:tick,mod,8==0) then (
			sli2 := first child (first child (first child (lookupslice(sli:im))))
			sli := slice child (sli2, mm:imsel)
			if (get slicevisible (sli)) then (
				set slice visible (sli, false)
			) else (
				set slice visible (sli, true)
			)
		)
	) else if (mm:openmenu==mm:em) then (
		if (game:tick,mod,8==0) then (
			sli2 := first child (first child (first child (lookupslice(sli:em))))
			sli := slice child (sli2, mm:emsel)
			if (get slicevisible (sli)) then (
				set slice visible (sli, false)
			) else (
				set slice visible (sli, true)
			)
		)
	)

	if (topmenu <> false || mm:openmenu<>0) then (exit script)

	if (game:tick,mod,9==0) then (
		for (i, 0, 2) do (
			sli := first child (slice child (first child (lookupslice(sli:mm)), i))
			if (i<> mm:sel) then (set slice visible (sli, true))
		)
		sli := first child (slice child (first child (lookupslice(sli:mm)), mm:sel))
		if (get slicevisible (sli)) then (
			set slice visible (sli, false)
		) else (
			set slice visible (sli, true)
		)
	)

end

#item menu
script, im, begin
	variable (sli, sli2, i)
	mm:openmenu:=mm:im
	mm:imsel := 0

	sli := load slice collection(3)
	updateitemcount

	while (mm:openmenu==mm:im) do (
		specwait
	)

	free slice (lookupslice(sli:im))
end

script, updateitemcount, begin
	variable (sli, sli2, i)
	sli := first child (first child (first child (lookupslice(sli:im))))
	free slice children (sli)
	for (i, 0, get inventory size--1) do (
		$5="ERROR"
		if (item in slot (i)<>-1) then (
			sli2 := createText
			getItemName(5,item in slot(i))
			$5+" x"
			append number (5, item count in slot (i))
			set slice text (sli2, 5)
			set parent (sli2, sli)
		) else (sli2 := createContainer, set parent (sli2, sli))
	)
end

script, imUseItem, which, begin
	switch (item in slot(which)) do (
		case (0,1,2,3) do (
			map cure (item in slot(which), me, me)
			$4=""
			append number(4, item in slot(which)+1)
			if (which == 3) then (
				write (16)
			) else (write (14))
			delete item(item in slot(which))
		)
		else (write (15))
	)
end

#status menu
script, sm, begin
	variable (i, sli, var1, var2)
	mm:smsel:=0
	mm:openmenu:=mm:sm
	sli := load slice collection(4)

	#determine level
	var1 := getHeroLevel(me)
	$3="Level "
	append number (3, var1)
	set slice text (slice child(lookupslice(sli:statGrid),0), 3)

	#determine HP
	var1 := getHeroStat(me, stat:HP, currentStat)
	var2 := getHeroStat(me, stat:HP, maximumStat)
	$3=""
	append number (3, var1)
	$3+"/"
	append number(3, var2)
	$3+" HP"
	set slice text (slice child(lookupslice(sli:statGrid),1), 3)

	#determine atk
	var1 := getHeroStat(me, stat:ATK)
	$3=""
	append number (3, var1)
	$3+" Attack"
	set slice text (slice child(lookupslice(sli:statGrid),2), 3)

	#determine def
	var1 := getHeroStat(me, stat:DEF)
	$3=""
	append number (3, var1)
	$3+" Defense"
	set slice text (slice child(lookupslice(sli:statGrid),3), 3)

	#determine Speed
	var1 := getHeroStat(me, stat:Speed)
	$3=""
	append number (3, var1)
	$3+" Speed"
	set slice text (slice child(lookupslice(sli:statGrid),4), 3)

	#determine r hand
	if (check equipment (me, slot:R Hand)<>-1) then (
		var1 := check equipment (me, slot:R Hand)
		$3="R Hand: "
		getItemName (4, var1)
		3 $+ 4
		set slice text (slice child(lookupslice(sli:equipGrid),0), 3)
	)
	#determine L hand
	if (check equipment (me, slot:L Hand)<>-1) then (
		var1 := check equipment (me, slot:L Hand)
		$3="L Hand: "
		getItemName (4, var1)
		3 $+ 4
		set slice text (slice child(lookupslice(sli:equipGrid),1), 3)
	)
	#determine Head
	if (check equipment (me, slot:Head)<>-1) then (
		var1 := check equipment (me, slot:Head)
		$3="Head: "
		getItemName (4, var1)
		3 $+ 4
		set slice text (slice child(lookupslice(sli:equipGrid),2), 3)
	)
	#determine Body
	if (check equipment (me, slot:Body)<>-1) then (
		var1 := check equipment (me, slot:Body)
		$3="Body: "
		getItemName (4, var1)
		3 $+ 4
		set slice text (slice child(lookupslice(sli:equipGrid),3), 3)
	)
	#determine Accessory
	if (check equipment (me, slot:Accessory)<>-1) then (
		var1 := check equipment (me, slot:Accessory)
		$3="Body: "
		getItemName (4, var1)
		3 $+ 4
		set slice text (slice child(lookupslice(sli:equipGrid),4), 3)
	)

	while (mm:openmenu==mm:sm || mm:openmenu==mm:em) do (
		specwait
	)
	free slice (lookupslice(sli:sm))
end

script, smUpdate, begin
	variable (sli)
	sli := lookupslice(sli:portrait)
	if (game:tick,mod,30==1) then (
		if (get sprite frame (sli)>=2) then (
			set sprite frame (sli, 0)
		) else (set sprite frame (sli, get sprite frame (sli)+1))
	)
end

script, openem, begin
	load slice collection (5)
	mm:openmenu:=mm:em
	mm:emsel := 0

	switch (mm:smsel) do (
		case (0) do (rHandEquip)
		case (1) do (lHandEquip)
		case (2) do (headEquip)
		case (3) do (bodyEquip)
		case (4) do (accessoryEquip)
	)

	while (mm:openmenu==mm:em) do (
		specwait
	)
	free slice (lookupslice(sli:em))
end

script, rHandEquip, begin
	variable (sli, i, var1, var2)
	$3="Right Hand"
	set slice text (lookupslice(sli:equipText), 3)
	setequiptext(slot:R Hand)
end

script, lHandEquip, begin
	variable (sli, i, var1, var2)
	$3="Left Hand"
	set slice text (lookupslice(sli:equipText), 3)
	setequiptext(slot:R Hand)
end

script, headEquip, begin
	variable (sli, i, var1, var2)
	$3="Head"
	set slice text (lookupslice(sli:equipText), 3)
	setequiptext(slot:Head)
end

script, bodyEquip, begin
	variable (sli, i, var1, var2)
	$3="Body"
	set slice text (lookupslice(sli:equipText), 3)
	setequiptext(slot:Body)
end

script, accessoryEquip, begin
	variable (sli, i, var1, var2)
	$3="Accessory"
	set slice text (lookupslice(sli:equipText), 3)
	setequiptext(slot:Accessory)
end

script, setequiptext, which, begin
	variable (sli, i, var1, var2)

	sli := create text()
	set parent(sli, lookupslice(sli:equipItemGrid))
	$3="Nothing"
	set slice extra (sli, 0)
	set slice text (sli, 3)
end

#TODO: add a script that gets the names of all the equipable items